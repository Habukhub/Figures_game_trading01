#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Figures_game_trading01
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Figures")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbid(bid instance);
    partial void Updatebid(bid instance);
    partial void Deletebid(bid instance);
    partial void Insertcatalog(catalog instance);
    partial void Updatecatalog(catalog instance);
    partial void Deletecatalog(catalog instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertpurchase(purchase instance);
    partial void Updatepurchase(purchase instance);
    partial void Deletepurchase(purchase instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bid> bids
		{
			get
			{
				return this.GetTable<bid>();
			}
		}
		
		public System.Data.Linq.Table<catalog> catalogs
		{
			get
			{
				return this.GetTable<catalog>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<purchase> purchases
		{
			get
			{
				return this.GetTable<purchase>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bid")]
	public partial class bid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bid_id;
		
		private int _item_id;
		
		private int _user_id;
		
		private decimal _amount;
		
		private System.DateTime _bid_time;
		
		private EntityRef<catalog> _catalog;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbid_idChanging(int value);
    partial void Onbid_idChanged();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onbid_timeChanging(System.DateTime value);
    partial void Onbid_timeChanged();
    #endregion
		
		public bid()
		{
			this._catalog = default(EntityRef<catalog>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bid_id
		{
			get
			{
				return this._bid_id;
			}
			set
			{
				if ((this._bid_id != value))
				{
					this.Onbid_idChanging(value);
					this.SendPropertyChanging();
					this._bid_id = value;
					this.SendPropertyChanged("bid_id");
					this.Onbid_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL")]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(12,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bid_time", DbType="DateTime NOT NULL")]
		public System.DateTime bid_time
		{
			get
			{
				return this._bid_time;
			}
			set
			{
				if ((this._bid_time != value))
				{
					this.Onbid_timeChanging(value);
					this.SendPropertyChanging();
					this._bid_time = value;
					this.SendPropertyChanged("bid_time");
					this.Onbid_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catalog_bid", Storage="_catalog", ThisKey="item_id", OtherKey="item_id", IsForeignKey=true)]
		public catalog catalog
		{
			get
			{
				return this._catalog.Entity;
			}
			set
			{
				catalog previousValue = this._catalog.Entity;
				if (((previousValue != value) 
							|| (this._catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog.Entity = null;
						previousValue.bids.Remove(this);
					}
					this._catalog.Entity = value;
					if ((value != null))
					{
						value.bids.Add(this);
						this._item_id = value.item_id;
					}
					else
					{
						this._item_id = default(int);
					}
					this.SendPropertyChanged("catalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_bid", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.bids.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.bids.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.catalog")]
	public partial class catalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _item_id;
		
		private int _seller_id;
		
		private string _Imgs;
		
		private string _name;
		
		private string _description;
		
		private decimal _price;
		
		private string _status;
		
		private System.DateTime _listed_at;
		
		private System.DateTime _starts_at;
		
		private System.DateTime _ends_at;
		
		private EntitySet<bid> _bids;
		
		private EntitySet<purchase> _purchases;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onseller_idChanging(int value);
    partial void Onseller_idChanged();
    partial void OnImgsChanging(string value);
    partial void OnImgsChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onlisted_atChanging(System.DateTime value);
    partial void Onlisted_atChanged();
    partial void Onstarts_atChanging(System.DateTime value);
    partial void Onstarts_atChanged();
    partial void Onends_atChanging(System.DateTime value);
    partial void Onends_atChanged();
    #endregion
		
		public catalog()
		{
			this._bids = new EntitySet<bid>(new Action<bid>(this.attach_bids), new Action<bid>(this.detach_bids));
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seller_id", DbType="Int NOT NULL")]
		public int seller_id
		{
			get
			{
				return this._seller_id;
			}
			set
			{
				if ((this._seller_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onseller_idChanging(value);
					this.SendPropertyChanging();
					this._seller_id = value;
					this.SendPropertyChanged("seller_id");
					this.Onseller_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imgs", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Imgs
		{
			get
			{
				return this._Imgs;
			}
			set
			{
				if ((this._Imgs != value))
				{
					this.OnImgsChanging(value);
					this.SendPropertyChanging();
					this._Imgs = value;
					this.SendPropertyChanged("Imgs");
					this.OnImgsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(12,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_listed_at", DbType="DateTime NOT NULL")]
		public System.DateTime listed_at
		{
			get
			{
				return this._listed_at;
			}
			set
			{
				if ((this._listed_at != value))
				{
					this.Onlisted_atChanging(value);
					this.SendPropertyChanging();
					this._listed_at = value;
					this.SendPropertyChanged("listed_at");
					this.Onlisted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starts_at", DbType="DateTime NOT NULL")]
		public System.DateTime starts_at
		{
			get
			{
				return this._starts_at;
			}
			set
			{
				if ((this._starts_at != value))
				{
					this.Onstarts_atChanging(value);
					this.SendPropertyChanging();
					this._starts_at = value;
					this.SendPropertyChanged("starts_at");
					this.Onstarts_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ends_at", DbType="DateTime NOT NULL")]
		public System.DateTime ends_at
		{
			get
			{
				return this._ends_at;
			}
			set
			{
				if ((this._ends_at != value))
				{
					this.Onends_atChanging(value);
					this.SendPropertyChanging();
					this._ends_at = value;
					this.SendPropertyChanged("ends_at");
					this.Onends_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catalog_bid", Storage="_bids", ThisKey="item_id", OtherKey="item_id")]
		public EntitySet<bid> bids
		{
			get
			{
				return this._bids;
			}
			set
			{
				this._bids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catalog_purchase", Storage="_purchases", ThisKey="item_id", OtherKey="item_id")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_catalog", Storage="_user", ThisKey="seller_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.catalogs.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.catalogs.Add(this);
						this._seller_id = value.user_id;
					}
					else
					{
						this._seller_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bids(bid entity)
		{
			this.SendPropertyChanging();
			entity.catalog = this;
		}
		
		private void detach_bids(bid entity)
		{
			this.SendPropertyChanging();
			entity.catalog = null;
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.catalog = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.catalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _payment_id;
		
		private int _purchase_id;
		
		private string _method;
		
		private decimal _amount;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _paid_date;
		
		private EntityRef<purchase> _purchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Onpurchase_idChanging(int value);
    partial void Onpurchase_idChanged();
    partial void OnmethodChanging(string value);
    partial void OnmethodChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onpaid_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpaid_dateChanged();
    #endregion
		
		public payment()
		{
			this._purchase = default(EntityRef<purchase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_id", DbType="Int NOT NULL")]
		public int purchase_id
		{
			get
			{
				return this._purchase_id;
			}
			set
			{
				if ((this._purchase_id != value))
				{
					if (this._purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpurchase_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_id = value;
					this.SendPropertyChanged("purchase_id");
					this.Onpurchase_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string method
		{
			get
			{
				return this._method;
			}
			set
			{
				if ((this._method != value))
				{
					this.OnmethodChanging(value);
					this.SendPropertyChanging();
					this._method = value;
					this.SendPropertyChanged("method");
					this.OnmethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(12,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> paid_date
		{
			get
			{
				return this._paid_date;
			}
			set
			{
				if ((this._paid_date != value))
				{
					this.Onpaid_dateChanging(value);
					this.SendPropertyChanging();
					this._paid_date = value;
					this.SendPropertyChanged("paid_date");
					this.Onpaid_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchase_payment", Storage="_purchase", ThisKey="purchase_id", OtherKey="purchase_id", IsForeignKey=true)]
		public purchase purchase
		{
			get
			{
				return this._purchase.Entity;
			}
			set
			{
				purchase previousValue = this._purchase.Entity;
				if (((previousValue != value) 
							|| (this._purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purchase.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._purchase.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._purchase_id = value.purchase_id;
					}
					else
					{
						this._purchase_id = default(int);
					}
					this.SendPropertyChanged("purchase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchase")]
	public partial class purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purchase_id;
		
		private int _item_id;
		
		private int _buyer_id;
		
		private decimal _total_amount;
		
		private System.DateTime _purchased_at;
		
		private EntitySet<payment> _payments;
		
		private EntityRef<catalog> _catalog;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpurchase_idChanging(int value);
    partial void Onpurchase_idChanged();
    partial void Onitem_idChanging(int value);
    partial void Onitem_idChanged();
    partial void Onbuyer_idChanging(int value);
    partial void Onbuyer_idChanged();
    partial void Ontotal_amountChanging(decimal value);
    partial void Ontotal_amountChanged();
    partial void Onpurchased_atChanging(System.DateTime value);
    partial void Onpurchased_atChanged();
    #endregion
		
		public purchase()
		{
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._catalog = default(EntityRef<catalog>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int purchase_id
		{
			get
			{
				return this._purchase_id;
			}
			set
			{
				if ((this._purchase_id != value))
				{
					this.Onpurchase_idChanging(value);
					this.SendPropertyChanging();
					this._purchase_id = value;
					this.SendPropertyChanged("purchase_id");
					this.Onpurchase_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int NOT NULL")]
		public int item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buyer_id", DbType="Int NOT NULL")]
		public int buyer_id
		{
			get
			{
				return this._buyer_id;
			}
			set
			{
				if ((this._buyer_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbuyer_idChanging(value);
					this.SendPropertyChanging();
					this._buyer_id = value;
					this.SendPropertyChanged("buyer_id");
					this.Onbuyer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Decimal(12,2) NOT NULL")]
		public decimal total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchased_at", DbType="DateTime NOT NULL")]
		public System.DateTime purchased_at
		{
			get
			{
				return this._purchased_at;
			}
			set
			{
				if ((this._purchased_at != value))
				{
					this.Onpurchased_atChanging(value);
					this.SendPropertyChanging();
					this._purchased_at = value;
					this.SendPropertyChanged("purchased_at");
					this.Onpurchased_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purchase_payment", Storage="_payments", ThisKey="purchase_id", OtherKey="purchase_id")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="catalog_purchase", Storage="_catalog", ThisKey="item_id", OtherKey="item_id", IsForeignKey=true)]
		public catalog catalog
		{
			get
			{
				return this._catalog.Entity;
			}
			set
			{
				catalog previousValue = this._catalog.Entity;
				if (((previousValue != value) 
							|| (this._catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._catalog.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._catalog.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._item_id = value.item_id;
					}
					else
					{
						this._item_id = default(int);
					}
					this.SendPropertyChanged("catalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_purchase", Storage="_user", ThisKey="buyer_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._buyer_id = value.user_id;
					}
					else
					{
						this._buyer_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.purchase = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.purchase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _username;
		
		private string _email;
		
		private string _password;
		
		private string _phone;
		
		private string _role;
		
		private System.DateTime _created_at;
		
		private EntitySet<bid> _bids;
		
		private EntitySet<catalog> _catalogs;
		
		private EntitySet<purchase> _purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    #endregion
		
		public user()
		{
			this._bids = new EntitySet<bid>(new Action<bid>(this.attach_bids), new Action<bid>(this.detach_bids));
			this._catalogs = new EntitySet<catalog>(new Action<catalog>(this.attach_catalogs), new Action<catalog>(this.detach_catalogs));
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_bid", Storage="_bids", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<bid> bids
		{
			get
			{
				return this._bids;
			}
			set
			{
				this._bids.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_catalog", Storage="_catalogs", ThisKey="user_id", OtherKey="seller_id")]
		public EntitySet<catalog> catalogs
		{
			get
			{
				return this._catalogs;
			}
			set
			{
				this._catalogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_purchase", Storage="_purchases", ThisKey="user_id", OtherKey="buyer_id")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bids(bid entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_bids(bid entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_catalogs(catalog entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_catalogs(catalog entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
